// Copyright (c) 2017 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

// gl-matrix is too big. Cherry-pick individual imports from stack.gl version
/* eslint-disable camelcase */
export { default as vec2_set } from 'gl-vec2/set';
export { default as vec2_add } from 'gl-vec2/add';
export { default as vec2_subtract } from 'gl-vec2/subtract';
export { default as vec2_multiply } from 'gl-vec2/multiply';
export { default as vec2_divide } from 'gl-vec2/divide';
export { default as vec2_scale } from 'gl-vec2/scale';
export { default as vec2_scaleAndAdd } from 'gl-vec2/scaleAndAdd';
export { default as vec2_negate } from 'gl-vec2/negate';
export { default as vec2_normalize } from 'gl-vec2/normalize';
export { default as vec2_dot } from 'gl-vec2/dot';
export { default as vec2_cross } from 'gl-vec2/cross';
export { default as vec2_lerp } from 'gl-vec2/lerp';
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9nbC1tYXRyaXgtbWluL3ZlYzIuanMiXSwibmFtZXMiOlsiZGVmYXVsdCIsInZlYzJfc2V0IiwidmVjMl9hZGQiLCJ2ZWMyX3N1YnRyYWN0IiwidmVjMl9tdWx0aXBseSIsInZlYzJfZGl2aWRlIiwidmVjMl9zY2FsZSIsInZlYzJfc2NhbGVBbmRBZGQiLCJ2ZWMyX25lZ2F0ZSIsInZlYzJfbm9ybWFsaXplIiwidmVjMl9kb3QiLCJ2ZWMyX2Nyb3NzIiwidmVjMl9sZXJwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsU0FBUUEsV0FBV0MsUUFBbkIsUUFBa0MsYUFBbEM7QUFDQSxTQUFRRCxXQUFXRSxRQUFuQixRQUFrQyxhQUFsQztBQUNBLFNBQVFGLFdBQVdHLGFBQW5CLFFBQXVDLGtCQUF2QztBQUNBLFNBQVFILFdBQVdJLGFBQW5CLFFBQXVDLGtCQUF2QztBQUNBLFNBQVFKLFdBQVdLLFdBQW5CLFFBQXFDLGdCQUFyQztBQUNBLFNBQVFMLFdBQVdNLFVBQW5CLFFBQW9DLGVBQXBDO0FBQ0EsU0FBUU4sV0FBV08sZ0JBQW5CLFFBQTBDLHFCQUExQztBQUNBLFNBQVFQLFdBQVdRLFdBQW5CLFFBQXFDLGdCQUFyQztBQUNBLFNBQVFSLFdBQVdTLGNBQW5CLFFBQXdDLG1CQUF4QztBQUNBLFNBQVFULFdBQVdVLFFBQW5CLFFBQWtDLGFBQWxDO0FBQ0EsU0FBUVYsV0FBV1csVUFBbkIsUUFBb0MsZUFBcEM7QUFDQSxTQUFRWCxXQUFXWSxTQUFuQixRQUFtQyxjQUFuQyIsImZpbGUiOiJ2ZWMyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSAyMDE3IFViZXIgVGVjaG5vbG9naWVzLCBJbmMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weVxuLy8gb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbFxuLy8gaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0c1xuLy8gdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbFxuLy8gY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzXG4vLyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluXG4vLyBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXG4vLyBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbi8vIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRVxuLy8gQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuLy8gTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSxcbi8vIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU5cbi8vIFRIRSBTT0ZUV0FSRS5cblxuLy8gZ2wtbWF0cml4IGlzIHRvbyBiaWcuIENoZXJyeS1waWNrIGluZGl2aWR1YWwgaW1wb3J0cyBmcm9tIHN0YWNrLmdsIHZlcnNpb25cbi8qIGVzbGludC1kaXNhYmxlIGNhbWVsY2FzZSAqL1xuZXhwb3J0IHtkZWZhdWx0IGFzIHZlYzJfc2V0fSBmcm9tICdnbC12ZWMyL3NldCc7XG5leHBvcnQge2RlZmF1bHQgYXMgdmVjMl9hZGR9IGZyb20gJ2dsLXZlYzIvYWRkJztcbmV4cG9ydCB7ZGVmYXVsdCBhcyB2ZWMyX3N1YnRyYWN0fSBmcm9tICdnbC12ZWMyL3N1YnRyYWN0JztcbmV4cG9ydCB7ZGVmYXVsdCBhcyB2ZWMyX211bHRpcGx5fSBmcm9tICdnbC12ZWMyL211bHRpcGx5JztcbmV4cG9ydCB7ZGVmYXVsdCBhcyB2ZWMyX2RpdmlkZX0gZnJvbSAnZ2wtdmVjMi9kaXZpZGUnO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHZlYzJfc2NhbGV9IGZyb20gJ2dsLXZlYzIvc2NhbGUnO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHZlYzJfc2NhbGVBbmRBZGR9IGZyb20gJ2dsLXZlYzIvc2NhbGVBbmRBZGQnO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHZlYzJfbmVnYXRlfSBmcm9tICdnbC12ZWMyL25lZ2F0ZSc7XG5leHBvcnQge2RlZmF1bHQgYXMgdmVjMl9ub3JtYWxpemV9IGZyb20gJ2dsLXZlYzIvbm9ybWFsaXplJztcbmV4cG9ydCB7ZGVmYXVsdCBhcyB2ZWMyX2RvdH0gZnJvbSAnZ2wtdmVjMi9kb3QnO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHZlYzJfY3Jvc3N9IGZyb20gJ2dsLXZlYzIvY3Jvc3MnO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHZlYzJfbGVycH0gZnJvbSAnZ2wtdmVjMi9sZXJwJztcbiJdfQ==