// Copyright (c) 2017 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

// gl-matrix is too big. Cherry-pick individual imports from stack.gl version
/* eslint-disable camelcase */
export { default as quat_fromMat3 } from 'gl-quat/fromMat3';
export { default as quat_identity } from 'gl-quat/identity';
export { default as quat_length } from 'gl-quat/length';
export { default as quat_squaredLength } from 'gl-quat/squaredLength';
export { default as quat_dot } from 'gl-quat/dot';
// export {default as quat_getAxisAngle} from 'gl-quat/getAxisAngle';
export { default as quat_rotationTo } from 'gl-quat/rotationTo';
export { default as quat_add } from 'gl-quat/add';
export { default as quat_calculateW } from 'gl-quat/calculateW';
export { default as quat_conjugate } from 'gl-quat/conjugate';
export { default as quat_invert } from 'gl-quat/invert';
export { default as quat_lerp } from 'gl-quat/lerp';
export { default as quat_multiply } from 'gl-quat/multiply';
export { default as quat_normalize } from 'gl-quat/normalize';
export { default as quat_rotateX } from 'gl-quat/rotateX';
export { default as quat_rotateY } from 'gl-quat/rotateY';
export { default as quat_rotateZ } from 'gl-quat/rotateZ';
export { default as quat_scale } from 'gl-quat/scale';
export { default as quat_set } from 'gl-quat/set';
export { default as quat_setAxisAngle } from 'gl-quat/setAxisAngle';
export { default as quat_slerp } from 'gl-quat/slerp';
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9nbC1tYXRyaXgtbWluL3F1YXQuanMiXSwibmFtZXMiOlsiZGVmYXVsdCIsInF1YXRfZnJvbU1hdDMiLCJxdWF0X2lkZW50aXR5IiwicXVhdF9sZW5ndGgiLCJxdWF0X3NxdWFyZWRMZW5ndGgiLCJxdWF0X2RvdCIsInF1YXRfcm90YXRpb25UbyIsInF1YXRfYWRkIiwicXVhdF9jYWxjdWxhdGVXIiwicXVhdF9jb25qdWdhdGUiLCJxdWF0X2ludmVydCIsInF1YXRfbGVycCIsInF1YXRfbXVsdGlwbHkiLCJxdWF0X25vcm1hbGl6ZSIsInF1YXRfcm90YXRlWCIsInF1YXRfcm90YXRlWSIsInF1YXRfcm90YXRlWiIsInF1YXRfc2NhbGUiLCJxdWF0X3NldCIsInF1YXRfc2V0QXhpc0FuZ2xlIiwicXVhdF9zbGVycCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFNBQVFBLFdBQVdDLGFBQW5CLFFBQXVDLGtCQUF2QztBQUNBLFNBQVFELFdBQVdFLGFBQW5CLFFBQXVDLGtCQUF2QztBQUNBLFNBQVFGLFdBQVdHLFdBQW5CLFFBQXFDLGdCQUFyQztBQUNBLFNBQVFILFdBQVdJLGtCQUFuQixRQUE0Qyx1QkFBNUM7QUFDQSxTQUFRSixXQUFXSyxRQUFuQixRQUFrQyxhQUFsQztBQUNBO0FBQ0EsU0FBUUwsV0FBV00sZUFBbkIsUUFBeUMsb0JBQXpDO0FBQ0EsU0FBUU4sV0FBV08sUUFBbkIsUUFBa0MsYUFBbEM7QUFDQSxTQUFRUCxXQUFXUSxlQUFuQixRQUF5QyxvQkFBekM7QUFDQSxTQUFRUixXQUFXUyxjQUFuQixRQUF3QyxtQkFBeEM7QUFDQSxTQUFRVCxXQUFXVSxXQUFuQixRQUFxQyxnQkFBckM7QUFDQSxTQUFRVixXQUFXVyxTQUFuQixRQUFtQyxjQUFuQztBQUNBLFNBQVFYLFdBQVdZLGFBQW5CLFFBQXVDLGtCQUF2QztBQUNBLFNBQVFaLFdBQVdhLGNBQW5CLFFBQXdDLG1CQUF4QztBQUNBLFNBQVFiLFdBQVdjLFlBQW5CLFFBQXNDLGlCQUF0QztBQUNBLFNBQVFkLFdBQVdlLFlBQW5CLFFBQXNDLGlCQUF0QztBQUNBLFNBQVFmLFdBQVdnQixZQUFuQixRQUFzQyxpQkFBdEM7QUFDQSxTQUFRaEIsV0FBV2lCLFVBQW5CLFFBQW9DLGVBQXBDO0FBQ0EsU0FBUWpCLFdBQVdrQixRQUFuQixRQUFrQyxhQUFsQztBQUNBLFNBQVFsQixXQUFXbUIsaUJBQW5CLFFBQTJDLHNCQUEzQztBQUNBLFNBQVFuQixXQUFXb0IsVUFBbkIsUUFBb0MsZUFBcEMiLCJmaWxlIjoicXVhdC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgMjAxNyBVYmVyIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHlcbi8vIG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlIFwiU29mdHdhcmVcIiksIHRvIGRlYWxcbi8vIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHNcbi8vIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGxcbi8vIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpc1xuLy8gZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpblxuLy8gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUlxuLy8gSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksXG4vLyBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEVcbi8vIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVJcbi8vIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sXG4vLyBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOXG4vLyBUSEUgU09GVFdBUkUuXG5cbi8vIGdsLW1hdHJpeCBpcyB0b28gYmlnLiBDaGVycnktcGljayBpbmRpdmlkdWFsIGltcG9ydHMgZnJvbSBzdGFjay5nbCB2ZXJzaW9uXG4vKiBlc2xpbnQtZGlzYWJsZSBjYW1lbGNhc2UgKi9cbmV4cG9ydCB7ZGVmYXVsdCBhcyBxdWF0X2Zyb21NYXQzfSBmcm9tICdnbC1xdWF0L2Zyb21NYXQzJztcbmV4cG9ydCB7ZGVmYXVsdCBhcyBxdWF0X2lkZW50aXR5fSBmcm9tICdnbC1xdWF0L2lkZW50aXR5JztcbmV4cG9ydCB7ZGVmYXVsdCBhcyBxdWF0X2xlbmd0aH0gZnJvbSAnZ2wtcXVhdC9sZW5ndGgnO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHF1YXRfc3F1YXJlZExlbmd0aH0gZnJvbSAnZ2wtcXVhdC9zcXVhcmVkTGVuZ3RoJztcbmV4cG9ydCB7ZGVmYXVsdCBhcyBxdWF0X2RvdH0gZnJvbSAnZ2wtcXVhdC9kb3QnO1xuLy8gZXhwb3J0IHtkZWZhdWx0IGFzIHF1YXRfZ2V0QXhpc0FuZ2xlfSBmcm9tICdnbC1xdWF0L2dldEF4aXNBbmdsZSc7XG5leHBvcnQge2RlZmF1bHQgYXMgcXVhdF9yb3RhdGlvblRvfSBmcm9tICdnbC1xdWF0L3JvdGF0aW9uVG8nO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHF1YXRfYWRkfSBmcm9tICdnbC1xdWF0L2FkZCc7XG5leHBvcnQge2RlZmF1bHQgYXMgcXVhdF9jYWxjdWxhdGVXfSBmcm9tICdnbC1xdWF0L2NhbGN1bGF0ZVcnO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHF1YXRfY29uanVnYXRlfSBmcm9tICdnbC1xdWF0L2Nvbmp1Z2F0ZSc7XG5leHBvcnQge2RlZmF1bHQgYXMgcXVhdF9pbnZlcnR9IGZyb20gJ2dsLXF1YXQvaW52ZXJ0JztcbmV4cG9ydCB7ZGVmYXVsdCBhcyBxdWF0X2xlcnB9IGZyb20gJ2dsLXF1YXQvbGVycCc7XG5leHBvcnQge2RlZmF1bHQgYXMgcXVhdF9tdWx0aXBseX0gZnJvbSAnZ2wtcXVhdC9tdWx0aXBseSc7XG5leHBvcnQge2RlZmF1bHQgYXMgcXVhdF9ub3JtYWxpemV9IGZyb20gJ2dsLXF1YXQvbm9ybWFsaXplJztcbmV4cG9ydCB7ZGVmYXVsdCBhcyBxdWF0X3JvdGF0ZVh9IGZyb20gJ2dsLXF1YXQvcm90YXRlWCc7XG5leHBvcnQge2RlZmF1bHQgYXMgcXVhdF9yb3RhdGVZfSBmcm9tICdnbC1xdWF0L3JvdGF0ZVknO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHF1YXRfcm90YXRlWn0gZnJvbSAnZ2wtcXVhdC9yb3RhdGVaJztcbmV4cG9ydCB7ZGVmYXVsdCBhcyBxdWF0X3NjYWxlfSBmcm9tICdnbC1xdWF0L3NjYWxlJztcbmV4cG9ydCB7ZGVmYXVsdCBhcyBxdWF0X3NldH0gZnJvbSAnZ2wtcXVhdC9zZXQnO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHF1YXRfc2V0QXhpc0FuZ2xlfSBmcm9tICdnbC1xdWF0L3NldEF4aXNBbmdsZSc7XG5leHBvcnQge2RlZmF1bHQgYXMgcXVhdF9zbGVycH0gZnJvbSAnZ2wtcXVhdC9zbGVycCc7XG4iXX0=