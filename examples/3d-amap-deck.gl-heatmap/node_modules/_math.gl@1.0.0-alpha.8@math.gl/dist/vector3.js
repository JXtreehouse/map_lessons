'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

exports.validateVector3 = validateVector3;

var _mathArray = require('./math-array');

var _mathArray2 = _interopRequireDefault(_mathArray);

var _common = require('./common');

var _set = require('gl-vec3/set');

var _set2 = _interopRequireDefault(_set);

var _length = require('gl-vec3/length');

var _length2 = _interopRequireDefault(_length);

var _distance = require('gl-vec3/distance');

var _distance2 = _interopRequireDefault(_distance);

var _angle = require('gl-vec3/angle');

var _angle2 = _interopRequireDefault(_angle);

var _add = require('gl-vec3/add');

var _add2 = _interopRequireDefault(_add);

var _subtract = require('gl-vec3/subtract');

var _subtract2 = _interopRequireDefault(_subtract);

var _multiply = require('gl-vec3/multiply');

var _multiply2 = _interopRequireDefault(_multiply);

var _divide = require('gl-vec3/divide');

var _divide2 = _interopRequireDefault(_divide);

var _scale2 = require('gl-vec3/scale');

var _scale3 = _interopRequireDefault(_scale2);

var _scaleAndAdd = require('gl-vec3/scaleAndAdd');

var _scaleAndAdd2 = _interopRequireDefault(_scaleAndAdd);

var _negate = require('gl-vec3/negate');

var _negate2 = _interopRequireDefault(_negate);

var _inverse = require('gl-vec3/inverse');

var _inverse2 = _interopRequireDefault(_inverse);

var _normalize = require('gl-vec3/normalize');

var _normalize2 = _interopRequireDefault(_normalize);

var _dot = require('gl-vec3/dot');

var _dot2 = _interopRequireDefault(_dot);

var _cross = require('gl-vec3/cross');

var _cross2 = _interopRequireDefault(_cross);

var _lerp = require('gl-vec3/lerp');

var _lerp2 = _interopRequireDefault(_lerp);

var _rotateX = require('gl-vec3/rotateX');

var _rotateX2 = _interopRequireDefault(_rotateX);

var _rotateY = require('gl-vec3/rotateY');

var _rotateY2 = _interopRequireDefault(_rotateY);

var _rotateZ = require('gl-vec3/rotateZ');

var _rotateZ2 = _interopRequireDefault(_rotateZ);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // Copyright (c) 2017 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

// gl-matrix is too big. Cherry-pick individual imports from stack.gl version
/* eslint-disable camelcase */


var ORIGIN = [0, 0, 0];

function validateVector3(v) {
  return v.length === 3 && Number.isFinite(v[0]) && Number.isFinite(v[1]) && Number.isFinite(v[2]);
}

var Vector3 = function (_MathArray) {
  _inherits(Vector3, _MathArray);

  // Creates a new vec3, either empty, or from an array or from values
  function Vector3() {
    var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
    var z = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;

    _classCallCheck(this, Vector3);

    var _this = _possibleConstructorReturn(this, (Vector3.__proto__ || Object.getPrototypeOf(Vector3)).call(this));

    if (Array.isArray(x) && arguments.length === 1) {
      _this.copy(x);
    } else {
      _this.set(x, y, z);
    }
    return _this;
  }

  // fromArray(array) {
  //   if (array instanceof Vector3) {
  //     return array;
  //   }
  //   return new Vector3(...array);
  // }

  _createClass(Vector3, [{
    key: 'set',
    value: function set(x, y, z) {
      (0, _set2.default)(this, x, y, z);
      return this.check();
    }

    // Getters/setters
    /* eslint-disable no-multi-spaces, brace-style, no-return-assign */

  }, {
    key: 'length',

    /* eslint-enable no-multi-spaces, brace-style, no-return-assign */

    value: function length() {
      return (0, _length2.default)(this);
    }
  }, {
    key: 'distance',
    value: function distance(vector) {
      return (0, _distance2.default)(this, vector);
    }
  }, {
    key: 'angle',
    value: function angle(vector) {
      return (0, _angle2.default)(this, vector);
    }
  }, {
    key: 'dot',
    value: function dot(vector) {
      return (0, _dot2.default)(this, vector);
    }

    // MODIFIERS

  }, {
    key: 'add',
    value: function add() {
      for (var _len = arguments.length, vectors = Array(_len), _key = 0; _key < _len; _key++) {
        vectors[_key] = arguments[_key];
      }

      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = vectors[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var vector = _step.value;

          (0, _add2.default)(this, this, vector);
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }

      return this.check();
    }
  }, {
    key: 'subtract',
    value: function subtract() {
      for (var _len2 = arguments.length, vectors = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        vectors[_key2] = arguments[_key2];
      }

      var _iteratorNormalCompletion2 = true;
      var _didIteratorError2 = false;
      var _iteratorError2 = undefined;

      try {
        for (var _iterator2 = vectors[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
          var vector = _step2.value;

          (0, _subtract2.default)(this, this, vector);
        }
      } catch (err) {
        _didIteratorError2 = true;
        _iteratorError2 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion2 && _iterator2.return) {
            _iterator2.return();
          }
        } finally {
          if (_didIteratorError2) {
            throw _iteratorError2;
          }
        }
      }

      return this.check();
    }
  }, {
    key: 'multiply',
    value: function multiply() {
      for (var _len3 = arguments.length, vectors = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        vectors[_key3] = arguments[_key3];
      }

      var _iteratorNormalCompletion3 = true;
      var _didIteratorError3 = false;
      var _iteratorError3 = undefined;

      try {
        for (var _iterator3 = vectors[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
          var vector = _step3.value;

          (0, _multiply2.default)(this, this, vector);
        }
      } catch (err) {
        _didIteratorError3 = true;
        _iteratorError3 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion3 && _iterator3.return) {
            _iterator3.return();
          }
        } finally {
          if (_didIteratorError3) {
            throw _iteratorError3;
          }
        }
      }

      return this.check();
    }
  }, {
    key: 'scale',
    value: function scale(_scale) {
      if (Number.isFinite(_scale)) {
        (0, _scale3.default)(this, this, _scale);
      } else {
        (0, _multiply2.default)(this, this, _scale);
      }
      return this.check();
    }
  }, {
    key: 'negate',
    value: function negate() {
      (0, _negate2.default)(this, this);
      return this.check();
    }
  }, {
    key: 'inverse',
    value: function inverse() {
      (0, _inverse2.default)(this, this);
      return this.check();
    }
  }, {
    key: 'normalize',
    value: function normalize() {
      (0, _normalize2.default)(this, this);
      return this.check();
    }
  }, {
    key: 'cross',
    value: function cross(vector) {
      (0, _cross2.default)(this, this, vector);
      return this.check();
    }
  }, {
    key: 'lerp',
    value: function lerp(vector, coeff) {
      (0, _lerp2.default)(this, this, vector, coeff);
      return this.check();
    }
  }, {
    key: 'rotateX',
    value: function rotateX(_ref) {
      var radians = _ref.radians,
          _ref$origin = _ref.origin,
          origin = _ref$origin === undefined ? ORIGIN : _ref$origin;

      (0, _rotateX2.default)(this, this, origin, radians);
      return this.check();
    }
  }, {
    key: 'rotateY',
    value: function rotateY(_ref2) {
      var radians = _ref2.radians,
          _ref2$origin = _ref2.origin,
          origin = _ref2$origin === undefined ? ORIGIN : _ref2$origin;

      (0, _rotateY2.default)(this, this, origin, radians);
      return this.check();
    }
  }, {
    key: 'rotateZ',
    value: function rotateZ(_ref3) {
      var radians = _ref3.radians,
          _ref3$origin = _ref3.origin,
          origin = _ref3$origin === undefined ? ORIGIN : _ref3$origin;

      (0, _rotateZ2.default)(this, this, origin, radians);
      return this.check();
    }
  }, {
    key: 'operation',
    value: function operation(_operation) {
      for (var _len4 = arguments.length, args = Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {
        args[_key4 - 1] = arguments[_key4];
      }

      _operation.apply(undefined, [this, this].concat(args));
      return this.check();
    }

    // TBD - do we really need these?

  }, {
    key: 'divide',
    value: function divide() {
      for (var _len5 = arguments.length, vectors = Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
        vectors[_key5] = arguments[_key5];
      }

      var _iteratorNormalCompletion4 = true;
      var _didIteratorError4 = false;
      var _iteratorError4 = undefined;

      try {
        for (var _iterator4 = vectors[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
          var vector = _step4.value;

          (0, _divide2.default)(this, this, vector);
        }
      } catch (err) {
        _didIteratorError4 = true;
        _iteratorError4 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion4 && _iterator4.return) {
            _iterator4.return();
          }
        } finally {
          if (_didIteratorError4) {
            throw _iteratorError4;
          }
        }
      }

      return this.check();
    }
  }, {
    key: 'scaleAndAdd',
    value: function scaleAndAdd(vector, scale) {
      (0, _scaleAndAdd2.default)(this, this, vector, scale);
      return this.check();
    }
  }, {
    key: 'ELEMENTS',
    get: function get() {
      return 3;
    }
  }, {
    key: 'x',
    get: function get() {
      return this[0];
    },
    set: function set(value) {
      return this[0] = (0, _common.checkNumber)(value);
    }
  }, {
    key: 'y',
    get: function get() {
      return this[1];
    },
    set: function set(value) {
      return this[1] = (0, _common.checkNumber)(value);
    }
  }, {
    key: 'z',
    get: function get() {
      return this[2];
    },
    set: function set(value) {
      return this[2] = (0, _common.checkNumber)(value);
    }
  }]);

  return Vector3;
}(_mathArray2.default);

exports.default = Vector3;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,