// Copyright (c) 2015 - 2017 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

// TODO - move to shaderlib utilities
import log from './log';
import { COORDINATE_SYSTEM } from '../lib/constants'; // TODO - utils should not import from lib

export function fp64ify(a) {
  var hiPart = Math.fround(a);
  var loPart = a - Math.fround(a);
  return [hiPart, loPart];
}

export function enable64bitSupport(props) {
  if (props.fp64) {
    if (props.coordinateSystem === COORDINATE_SYSTEM.LNGLAT) {
      return true;
    }
    log.once(0, '64-bit mode only works with coordinateSystem set to\n      COORDINATE_SYSTEM.LNGLAT. Rendering in 32-bit mode instead');
  }

  return false;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb3JlL3V0aWxzL2ZwNjQuanMiXSwibmFtZXMiOlsibG9nIiwiQ09PUkRJTkFURV9TWVNURU0iLCJmcDY0aWZ5IiwiYSIsImhpUGFydCIsIk1hdGgiLCJmcm91bmQiLCJsb1BhcnQiLCJlbmFibGU2NGJpdFN1cHBvcnQiLCJwcm9wcyIsImZwNjQiLCJjb29yZGluYXRlU3lzdGVtIiwiTE5HTEFUIiwib25jZSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxPQUFPQSxHQUFQLE1BQWdCLE9BQWhCO0FBQ0EsU0FBUUMsaUJBQVIsUUFBZ0Msa0JBQWhDLEMsQ0FBb0Q7O0FBRXBELE9BQU8sU0FBU0MsT0FBVCxDQUFpQkMsQ0FBakIsRUFBb0I7QUFDekIsTUFBTUMsU0FBU0MsS0FBS0MsTUFBTCxDQUFZSCxDQUFaLENBQWY7QUFDQSxNQUFNSSxTQUFTSixJQUFJRSxLQUFLQyxNQUFMLENBQVlILENBQVosQ0FBbkI7QUFDQSxTQUFPLENBQUNDLE1BQUQsRUFBU0csTUFBVCxDQUFQO0FBQ0Q7O0FBRUQsT0FBTyxTQUFTQyxrQkFBVCxDQUE0QkMsS0FBNUIsRUFBbUM7QUFDeEMsTUFBSUEsTUFBTUMsSUFBVixFQUFnQjtBQUNkLFFBQUlELE1BQU1FLGdCQUFOLEtBQTJCVixrQkFBa0JXLE1BQWpELEVBQXlEO0FBQ3ZELGFBQU8sSUFBUDtBQUNEO0FBQ0RaLFFBQUlhLElBQUosQ0FDRSxDQURGO0FBS0Q7O0FBRUQsU0FBTyxLQUFQO0FBQ0QiLCJmaWxlIjoiZnA2NC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgMjAxNSAtIDIwMTcgVWJlciBUZWNobm9sb2dpZXMsIEluYy5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XG4vLyBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsXG4vLyBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzXG4vLyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsXG4vLyBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXNcbi8vIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW5cbi8vIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1Jcbi8vIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxuLy8gRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFXG4vLyBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXG4vLyBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLFxuLy8gT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTlxuLy8gVEhFIFNPRlRXQVJFLlxuXG4vLyBUT0RPIC0gbW92ZSB0byBzaGFkZXJsaWIgdXRpbGl0aWVzXG5pbXBvcnQgbG9nIGZyb20gJy4vbG9nJztcbmltcG9ydCB7Q09PUkRJTkFURV9TWVNURU19IGZyb20gJy4uL2xpYi9jb25zdGFudHMnOyAvLyBUT0RPIC0gdXRpbHMgc2hvdWxkIG5vdCBpbXBvcnQgZnJvbSBsaWJcblxuZXhwb3J0IGZ1bmN0aW9uIGZwNjRpZnkoYSkge1xuICBjb25zdCBoaVBhcnQgPSBNYXRoLmZyb3VuZChhKTtcbiAgY29uc3QgbG9QYXJ0ID0gYSAtIE1hdGguZnJvdW5kKGEpO1xuICByZXR1cm4gW2hpUGFydCwgbG9QYXJ0XTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGVuYWJsZTY0Yml0U3VwcG9ydChwcm9wcykge1xuICBpZiAocHJvcHMuZnA2NCkge1xuICAgIGlmIChwcm9wcy5jb29yZGluYXRlU3lzdGVtID09PSBDT09SRElOQVRFX1NZU1RFTS5MTkdMQVQpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBsb2cub25jZShcbiAgICAgIDAsXG4gICAgICBgNjQtYml0IG1vZGUgb25seSB3b3JrcyB3aXRoIGNvb3JkaW5hdGVTeXN0ZW0gc2V0IHRvXG4gICAgICBDT09SRElOQVRFX1NZU1RFTS5MTkdMQVQuIFJlbmRlcmluZyBpbiAzMi1iaXQgbW9kZSBpbnN0ZWFkYFxuICAgICk7XG4gIH1cblxuICByZXR1cm4gZmFsc2U7XG59XG4iXX0=