'use strict';

var _tapeCatch = require('tape-catch');

var _tapeCatch2 = _interopRequireDefault(_tapeCatch);

var _deck = require('deck.gl-layers');

require('./polygon-tesselation.spec');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Copyright (c) 2015 - 2017 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

(0, _tapeCatch2.default)('Top-level imports', function (t) {
  t.ok(_deck.MeshLayer, 'MeshLayer symbol imported');
  t.ok(_deck.PathMarkerLayer, 'PathMarkerLayer symbol imported');
  t.ok(_deck.PathOutlineLayer, 'PathOutlineLayer symbol imported');
  t.ok(_deck.SolidPolygonLayer, 'SolidPolygonLayer symbol imported');
  t.ok(_deck.Arrow2DGeometry, 'Arrow2DGeometry symbol imported');
  t.ok(_deck.outline, 'outline symbol imported');
  t.end();
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9leHBlcmltZW50YWwtbGF5ZXJzL3Rlc3QvaW5kZXguanMiXSwibmFtZXMiOlsidCIsIm9rIiwiZW5kIl0sIm1hcHBpbmdzIjoiOztBQW9CQTs7OztBQUVBOztBQW1CQTs7OztBQXpDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFhQSx5QkFBSyxtQkFBTCxFQUEwQixhQUFLO0FBQzdCQSxJQUFFQyxFQUFGLGtCQUFnQiwyQkFBaEI7QUFDQUQsSUFBRUMsRUFBRix3QkFBc0IsaUNBQXRCO0FBQ0FELElBQUVDLEVBQUYseUJBQXVCLGtDQUF2QjtBQUNBRCxJQUFFQyxFQUFGLDBCQUF3QixtQ0FBeEI7QUFDQUQsSUFBRUMsRUFBRix3QkFBc0IsaUNBQXRCO0FBQ0FELElBQUVDLEVBQUYsZ0JBQWMseUJBQWQ7QUFDQUQsSUFBRUUsR0FBRjtBQUNELENBUkQiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIDIwMTUgLSAyMDE3IFViZXIgVGVjaG5vbG9naWVzLCBJbmMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weVxuLy8gb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbFxuLy8gaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0c1xuLy8gdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbFxuLy8gY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzXG4vLyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluXG4vLyBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXG4vLyBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbi8vIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRVxuLy8gQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuLy8gTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSxcbi8vIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU5cbi8vIFRIRSBTT0ZUV0FSRS5cblxuaW1wb3J0IHRlc3QgZnJvbSAndGFwZS1jYXRjaCc7XG5cbmltcG9ydCB7XG4gIE1lc2hMYXllcixcbiAgUGF0aE1hcmtlckxheWVyLFxuICBQYXRoT3V0bGluZUxheWVyLFxuICBBcnJvdzJER2VvbWV0cnksXG4gIFNvbGlkUG9seWdvbkxheWVyLFxuICBvdXRsaW5lXG59IGZyb20gJ2RlY2suZ2wtbGF5ZXJzJztcblxudGVzdCgnVG9wLWxldmVsIGltcG9ydHMnLCB0ID0+IHtcbiAgdC5vayhNZXNoTGF5ZXIsICdNZXNoTGF5ZXIgc3ltYm9sIGltcG9ydGVkJyk7XG4gIHQub2soUGF0aE1hcmtlckxheWVyLCAnUGF0aE1hcmtlckxheWVyIHN5bWJvbCBpbXBvcnRlZCcpO1xuICB0Lm9rKFBhdGhPdXRsaW5lTGF5ZXIsICdQYXRoT3V0bGluZUxheWVyIHN5bWJvbCBpbXBvcnRlZCcpO1xuICB0Lm9rKFNvbGlkUG9seWdvbkxheWVyLCAnU29saWRQb2x5Z29uTGF5ZXIgc3ltYm9sIGltcG9ydGVkJyk7XG4gIHQub2soQXJyb3cyREdlb21ldHJ5LCAnQXJyb3cyREdlb21ldHJ5IHN5bWJvbCBpbXBvcnRlZCcpO1xuICB0Lm9rKG91dGxpbmUsICdvdXRsaW5lIHN5bWJvbCBpbXBvcnRlZCcpO1xuICB0LmVuZCgpO1xufSk7XG5cbmltcG9ydCAnLi9wb2x5Z29uLXRlc3NlbGF0aW9uLnNwZWMnO1xuIl19