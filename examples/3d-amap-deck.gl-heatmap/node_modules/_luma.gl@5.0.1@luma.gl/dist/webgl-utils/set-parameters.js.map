{"version":3,"sources":["../../src/webgl-utils/set-parameters.js"],"names":["setParameter","setParameters","getParameter","getParameters","getDefaultParameters","resetParameters","getModifiedParameters","GL_PARAMETER_DEFAULTS","BLEND","BLEND_COLOR","Float32Array","BLEND_EQUATION_RGB","FUNC_ADD","BLEND_EQUATION_ALPHA","BLEND_SRC_RGB","ONE","BLEND_DST_RGB","ZERO","BLEND_SRC_ALPHA","BLEND_DST_ALPHA","COLOR_CLEAR_VALUE","COLOR_WRITEMASK","CULL_FACE","CULL_FACE_MODE","BACK","DEPTH_TEST","DEPTH_CLEAR_VALUE","DEPTH_FUNC","LESS","DEPTH_RANGE","DEPTH_WRITEMASK","DITHER","FRAMEBUFFER_BINDING","FRONT_FACE","CCW","GENERATE_MIPMAP_HINT","DONT_CARE","LINE_WIDTH","POLYGON_OFFSET_FILL","POLYGON_OFFSET_FACTOR","POLYGON_OFFSET_UNITS","SAMPLE_COVERAGE_VALUE","SAMPLE_COVERAGE_INVERT","SCISSOR_TEST","SCISSOR_BOX","Int32Array","STENCIL_TEST","STENCIL_CLEAR_VALUE","STENCIL_WRITEMASK","STENCIL_BACK_WRITEMASK","STENCIL_FUNC","ALWAYS","STENCIL_REF","STENCIL_VALUE_MASK","STENCIL_BACK_FUNC","STENCIL_BACK_REF","STENCIL_BACK_VALUE_MASK","STENCIL_FAIL","KEEP","STENCIL_PASS_DEPTH_FAIL","STENCIL_PASS_DEPTH_PASS","STENCIL_BACK_FAIL","STENCIL_BACK_PASS_DEPTH_FAIL","STENCIL_BACK_PASS_DEPTH_PASS","VIEWPORT","PACK_ALIGNMENT","UNPACK_ALIGNMENT","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_COLORSPACE_CONVERSION_WEBGL","BROWSER_DEFAULT_WEBGL","FRAGMENT_SHADER_DERIVATIVE_HINT","READ_FRAMEBUFFER_BINDING","RASTERIZER_DISCARD","PACK_ROW_LENGTH","PACK_SKIP_PIXELS","PACK_SKIP_ROWS","UNPACK_ROW_LENGTH","UNPACK_IMAGE_HEIGHT","UNPACK_SKIP_PIXELS","UNPACK_SKIP_ROWS","UNPACK_SKIP_IMAGES","enable","gl","value","key","disable","hint","pixelStorei","drawFramebuffer","bindFramebuffer","DRAW_FRAMEBUFFER","readFramebuffer","READ_FRAMEBUFFER","GL_PARAMETER_SETTERS","blendColor","clearColor","colorMask","cullFace","clearDepth","depthFunc","depthRange","depthMask","frontFace","lineWidth","scissor","clearStencil","stencilMaskSeparate","FRONT","viewport","COMPOSITE_GL_PARAMETER_SETTERS","blendEquation","values","blendEquationSeparate","blendFunc","blendFuncSeparate","polygonOffset","sampleCoverage","stencilFuncFront","stencilFuncSeparate","stencilFuncBack","stencilOpFront","stencilOpSeparate","stencilOpBack","isEnabled","GL_PARAMETER_GETTERS","SAMPLE_ALPHA_TO_COVERAGE","SAMPLE_COVERAGE","deepArrayEqual","x","y","isArrayX","Array","isArray","ArrayBuffer","isView","isArrayY","length","i","getter","prevValue","Number","setter","compositeSetters","cache","state","mergedValues","Object","assign","compositeSetter","parameters","parameterKeys","keys","modified"],"mappings":"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","file":"set-parameters.js","sourcesContent":["// Provides a unified API for getting and setting any WebGL parameter\n// Also knows default values of all parameters, enabling fast cache initialization\n// Provides base functionality for the state caching.\nimport GL from './constants';\nimport assert from 'assert';\n\n// DEFAULT SETTINGS - FOR FAST CACHE INITIALIZATION AND CONTEXT RESETS\n\nexport const GL_PARAMETER_DEFAULTS = {\n  [GL.BLEND]: false,\n  [GL.BLEND_COLOR]: new Float32Array([0, 0, 0, 0]),\n  [GL.BLEND_EQUATION_RGB]: GL.FUNC_ADD,\n  [GL.BLEND_EQUATION_ALPHA]: GL.FUNC_ADD,\n  [GL.BLEND_SRC_RGB]: GL.ONE,\n  [GL.BLEND_DST_RGB]: GL.ZERO,\n  [GL.BLEND_SRC_ALPHA]: GL.ONE,\n  [GL.BLEND_DST_ALPHA]: GL.ZERO,\n  [GL.COLOR_CLEAR_VALUE]: new Float32Array([0, 0, 0, 0]), // TBD\n  [GL.COLOR_WRITEMASK]: [true, true, true, true],\n  [GL.CULL_FACE]: false,\n  [GL.CULL_FACE_MODE]: GL.BACK,\n  [GL.DEPTH_TEST]: false,\n  [GL.DEPTH_CLEAR_VALUE]: 1,\n  [GL.DEPTH_FUNC]: GL.LESS,\n  [GL.DEPTH_RANGE]: new Float32Array([0, 1]), // TBD\n  [GL.DEPTH_WRITEMASK]: true,\n  [GL.DITHER]: true,\n  // FRAMEBUFFER_BINDING and DRAW_FRAMEBUFFER_BINDING(WebGL2) refer same state.\n  [GL.FRAMEBUFFER_BINDING]: null,\n  [GL.FRONT_FACE]: GL.CCW,\n  [GL.GENERATE_MIPMAP_HINT]: GL.DONT_CARE,\n  [GL.LINE_WIDTH]: 1,\n  [GL.POLYGON_OFFSET_FILL]: false,\n  [GL.POLYGON_OFFSET_FACTOR]: 0,\n  [GL.POLYGON_OFFSET_UNITS]: 0,\n  [GL.SAMPLE_COVERAGE_VALUE]: 1.0,\n  [GL.SAMPLE_COVERAGE_INVERT]: false,\n  [GL.SCISSOR_TEST]: false,\n  // Note: Dynamic value. If scissor test enabled we expect users to set correct scissor box\n  [GL.SCISSOR_BOX]: new Int32Array([0, 0, 1024, 1024]),\n  [GL.STENCIL_TEST]: false,\n  [GL.STENCIL_CLEAR_VALUE]: 0,\n  [GL.STENCIL_WRITEMASK]: 0xFFFFFFFF,\n  [GL.STENCIL_BACK_WRITEMASK]: 0xFFFFFFFF,\n  [GL.STENCIL_FUNC]: GL.ALWAYS,\n  [GL.STENCIL_REF]: 0,\n  [GL.STENCIL_VALUE_MASK]: 0xFFFFFFFF,\n  [GL.STENCIL_BACK_FUNC]: GL.ALWAYS,\n  [GL.STENCIL_BACK_REF]: 0,\n  [GL.STENCIL_BACK_VALUE_MASK]: 0xFFFFFFFF,\n  [GL.STENCIL_FAIL]: GL.KEEP,\n  [GL.STENCIL_PASS_DEPTH_FAIL]: GL.KEEP,\n  [GL.STENCIL_PASS_DEPTH_PASS]: GL.KEEP,\n  [GL.STENCIL_BACK_FAIL]: GL.KEEP,\n  [GL.STENCIL_BACK_PASS_DEPTH_FAIL]: GL.KEEP,\n  [GL.STENCIL_BACK_PASS_DEPTH_PASS]: GL.KEEP,\n  // Dynamic value: We use [0, 0, 1024, 1024] as default, but usually this is updated in each frame.\n  [GL.VIEWPORT]: new Int32Array([0, 0, 1024, 1024]),\n  // WEBGL1 PIXEL PACK/UNPACK MODES\n  [GL.PACK_ALIGNMENT]: 4,\n  [GL.UNPACK_ALIGNMENT]: 4,\n  [GL.UNPACK_FLIP_Y_WEBGL]: false,\n  [GL.UNPACK_PREMULTIPLY_ALPHA_WEBGL]: false,\n  [GL.UNPACK_COLORSPACE_CONVERSION_WEBGL]: GL.BROWSER_DEFAULT_WEBGL,\n\n  // WEBGL2 / EXTENSIONS\n  // gl1: 'OES_standard_derivatives'\n  [GL.FRAGMENT_SHADER_DERIVATIVE_HINT]: GL.DONT_CARE,\n  [GL.READ_FRAMEBUFFER_BINDING]: null,\n  [GL.RASTERIZER_DISCARD]: false,\n  [GL.PACK_ROW_LENGTH]: 0,\n  [GL.PACK_SKIP_PIXELS]: 0,\n  [GL.PACK_SKIP_ROWS]: 0,\n  [GL.UNPACK_ROW_LENGTH]: 0,\n  [GL.UNPACK_IMAGE_HEIGHT]: 0,\n  [GL.UNPACK_SKIP_PIXELS]: 0,\n  [GL.UNPACK_SKIP_ROWS]: 0,\n  [GL.UNPACK_SKIP_IMAGES]: 0\n};\n\n// SETTER TABLES - ENABLES SETTING ANY PARAMETER WITH A COMMON API\n\nconst enable = (gl, value, key) => value ? gl.enable(key) : gl.disable(key);\nconst hint = (gl, value, key) => gl.hint(key, value);\nconst pixelStorei = (gl, value, key) => gl.pixelStorei(key, value);\n\nconst drawFramebuffer = (gl, value) => {\n  return gl.bindFramebuffer(GL.DRAW_FRAMEBUFFER, value);\n};\nconst readFramebuffer = (gl, value) => {\n  return gl.bindFramebuffer(GL.READ_FRAMEBUFFER, value);\n};\n\n// Map from WebGL parameter names to corresponding WebGL setter functions\n// WegGL constants are read by parameter names, but set by function names\n// NOTE: When value type is a string, it will be handled by 'COMPOSITE_GL_PARAMETER_SETTERS'\nexport const GL_PARAMETER_SETTERS = {\n  [GL.BLEND]: enable,\n  [GL.BLEND_COLOR]: (gl, value) => gl.blendColor(...value),\n  [GL.BLEND_EQUATION_RGB]: 'blendEquation',\n  [GL.BLEND_EQUATION_ALPHA]: 'blendEquation',\n  [GL.BLEND_SRC_RGB]: 'blendFunc',\n  [GL.BLEND_DST_RGB]: 'blendFunc',\n  [GL.BLEND_SRC_ALPHA]: 'blendFunc',\n  [GL.BLEND_DST_ALPHA]: 'blendFunc',\n  [GL.COLOR_CLEAR_VALUE]: (gl, value) => gl.clearColor(...value),\n  [GL.COLOR_WRITEMASK]: (gl, value) => gl.colorMask(...value),\n  [GL.CULL_FACE]: enable,\n  [GL.CULL_FACE_MODE]: (gl, value) => gl.cullFace(value),\n  [GL.DEPTH_TEST]: enable,\n  [GL.DEPTH_CLEAR_VALUE]: (gl, value) => gl.clearDepth(value),\n  [GL.DEPTH_FUNC]: (gl, value) => gl.depthFunc(value),\n  [GL.DEPTH_RANGE]: (gl, value) => gl.depthRange(...value),\n  [GL.DEPTH_WRITEMASK]: (gl, value) => gl.depthMask(value),\n  [GL.DITHER]: enable,\n  [GL.FRAGMENT_SHADER_DERIVATIVE_HINT]: hint,\n  // NOTE: FRAMEBUFFER_BINDING and DRAW_FRAMEBUFFER_BINDING(WebGL2) refer same state.\n  [GL.FRAMEBUFFER_BINDING]: drawFramebuffer,\n  [GL.FRONT_FACE]: (gl, value) => gl.frontFace(value),\n  [GL.GENERATE_MIPMAP_HINT]: hint,\n  [GL.LINE_WIDTH]: (gl, value) => gl.lineWidth(value),\n  [GL.POLYGON_OFFSET_FILL]: enable,\n  [GL.POLYGON_OFFSET_FACTOR]: 'polygonOffset',\n  [GL.POLYGON_OFFSET_UNITS]: 'polygonOffset',\n  [GL.RASTERIZER_DISCARD]: enable,\n  [GL.SAMPLE_COVERAGE_VALUE]: 'sampleCoverage',\n  [GL.SAMPLE_COVERAGE_INVERT]: 'sampleCoverage',\n  [GL.SCISSOR_TEST]: enable,\n  [GL.SCISSOR_BOX]: (gl, value) => gl.scissor(...value),\n  [GL.STENCIL_TEST]: enable,\n  [GL.STENCIL_CLEAR_VALUE]: (gl, value) => gl.clearStencil(value),\n  [GL.STENCIL_WRITEMASK]: (gl, value) => gl.stencilMaskSeparate(GL.FRONT, value),\n  [GL.STENCIL_BACK_WRITEMASK]: (gl, value) => gl.stencilMaskSeparate(GL.BACK, value),\n  [GL.STENCIL_FUNC]: 'stencilFuncFront',\n  [GL.STENCIL_REF]: 'stencilFuncFront',\n  [GL.STENCIL_VALUE_MASK]: 'stencilFuncFront',\n  [GL.STENCIL_BACK_FUNC]: 'stencilFuncBack',\n  [GL.STENCIL_BACK_REF]: 'stencilFuncBack',\n  [GL.STENCIL_BACK_VALUE_MASK]: 'stencilFuncBack',\n  [GL.STENCIL_FAIL]: 'stencilOpFront',\n  [GL.STENCIL_PASS_DEPTH_FAIL]: 'stencilOpFront',\n  [GL.STENCIL_PASS_DEPTH_PASS]: 'stencilOpFront',\n  [GL.STENCIL_BACK_FAIL]: 'stencilOpBack',\n  [GL.STENCIL_BACK_PASS_DEPTH_FAIL]: 'stencilOpBack',\n  [GL.STENCIL_BACK_PASS_DEPTH_PASS]: 'stencilOpBack',\n  [GL.VIEWPORT]: (gl, value) => gl.viewport(...value),\n\n  // WEBGL1 PIXEL PACK/UNPACK MODES\n  [GL.PACK_ALIGNMENT]: pixelStorei,\n  [GL.UNPACK_ALIGNMENT]: pixelStorei,\n  [GL.UNPACK_FLIP_Y_WEBGL]: pixelStorei,\n  [GL.UNPACK_PREMULTIPLY_ALPHA_WEBGL]: pixelStorei,\n  [GL.UNPACK_COLORSPACE_CONVERSION_WEBGL]: pixelStorei,\n\n  // WEBGL2 PIXEL PACK/UNPACK MODES\n  // RASTERIZER_DISCARD ...\n  [GL.PACK_ROW_LENGTH]: pixelStorei,\n  [GL.PACK_SKIP_PIXELS]: pixelStorei,\n  [GL.PACK_SKIP_ROWS]: pixelStorei,\n  [GL.READ_FRAMEBUFFER_BINDING]: readFramebuffer,\n  [GL.UNPACK_ROW_LENGTH]: pixelStorei,\n  [GL.UNPACK_IMAGE_HEIGHT]: pixelStorei,\n  [GL.UNPACK_SKIP_PIXELS]: pixelStorei,\n  [GL.UNPACK_SKIP_ROWS]: pixelStorei,\n  [GL.UNPACK_SKIP_IMAGES]: pixelStorei\n};\n\n// COMPOSITE_WEBGL_PARAMETER_\nconst COMPOSITE_GL_PARAMETER_SETTERS = {\n  blendEquation: (gl, values) => gl.blendEquationSeparate(\n    values[GL.BLEND_EQUATION_RGB],\n    values[GL.BLEND_EQUATION_ALPHA]\n  ),\n  blendFunc: (gl, values) => gl.blendFuncSeparate(\n    values[GL.BLEND_SRC_RGB],\n    values[GL.BLEND_DST_RGB],\n    values[GL.BLEND_SRC_ALPHA],\n    values[GL.BLEND_DST_ALPHA]\n  ),\n  polygonOffset: (gl, values) => gl.polygonOffset(\n    values[GL.POLYGON_OFFSET_FACTOR],\n    values[GL.POLYGON_OFFSET_UNITS]\n  ),\n  sampleCoverage: (gl, values) => gl.sampleCoverage(\n    values[GL.SAMPLE_COVERAGE_VALUE],\n    values[GL.SAMPLE_COVERAGE_INVERT]\n  ),\n  stencilFuncFront: (gl, values) => gl.stencilFuncSeparate(GL.FRONT,\n    values[GL.STENCIL_FUNC],\n    values[GL.STENCIL_REF],\n    values[GL.STENCIL_VALUE_MASK]\n  ),\n  stencilFuncBack: (gl, values) => gl.stencilFuncSeparate(GL.BACK,\n    values[GL.STENCIL_BACK_FUNC],\n    values[GL.STENCIL_BACK_REF],\n    values[GL.STENCIL_BACK_VALUE_MASK]\n  ),\n  stencilOpFront: (gl, values) => gl.stencilOpSeparate(GL.FRONT,\n    values[GL.STENCIL_FAIL],\n    values[GL.STENCIL_PASS_DEPTH_FAIL],\n    values[GL.STENCIL_PASS_DEPTH_PASS]\n  ),\n  stencilOpBack: (gl, values) => gl.stencilOpSeparate(GL.BACK,\n    values[GL.STENCIL_BACK_FAIL],\n    values[GL.STENCIL_BACK_PASS_DEPTH_FAIL],\n    values[GL.STENCIL_BACK_PASS_DEPTH_PASS]\n  )\n};\n\n// GETTER TABLE - FOR READING OUT AN ENTIRE CONTEXT\n\nconst isEnabled = (gl, key) => gl.isEnabled(key);\n\n// Exceptions for any keys that cannot be queried by gl.getParameters\nexport const GL_PARAMETER_GETTERS = {\n  [GL.BLEND]: isEnabled,\n  [GL.CULL_FACE]: isEnabled,\n  [GL.DEPTH_TEST]: isEnabled,\n  [GL.DITHER]: isEnabled,\n  [GL.POLYGON_OFFSET_FILL]: isEnabled,\n  [GL.SAMPLE_ALPHA_TO_COVERAGE]: isEnabled,\n  [GL.SAMPLE_COVERAGE]: isEnabled,\n  [GL.SCISSOR_TEST]: isEnabled,\n  [GL.STENCIL_TEST]: isEnabled,\n\n  // WebGL 2\n  [GL.RASTERIZER_DISCARD]: isEnabled\n};\n\n// HELPER METHODS\n\nconst deepArrayEqual = (x, y) => {\n  if (x === y) {\n    return true;\n  }\n  const isArrayX = Array.isArray(x) || ArrayBuffer.isView(x);\n  const isArrayY = Array.isArray(y) || ArrayBuffer.isView(y);\n  if (isArrayX && isArrayY && x.length === y.length) {\n    for (let i = 0; i < x.length; ++i) {\n      if (x[i] !== y[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n};\n\n// PUBLIC METHODS\n\n// Sets any single GL parameter regardless of function (gl.getParameter/gl.isEnabled...)\n// Returns the previous value\n// Note: limited to parameter values\nexport function setParameter(gl, key, value) {\n  const getter = GL_PARAMETER_GETTERS[key];\n  const prevValue = getter ? getter(gl, Number(key)) : gl.getParameter(Number(key));\n  const setter = GL_PARAMETER_SETTERS[key];\n  assert(typeof setter === 'function');\n  setter(gl, value, Number(key));\n  return prevValue;\n}\n\n// Sets any GL parameter regardless of function (gl.blendMode, ...)\n// Note: requires a `cache` object to be set on the context (gl.state.cache)\n// This object is used to fill in any missing values for composite setter functions\nexport function setParameters(gl, values) {\n  const compositeSetters = {};\n\n  // HANDLE PRIMITIVE SETTERS (and make note of any composite setters)\n\n  for (const key in values) {\n    const setter = GL_PARAMETER_SETTERS[key];\n    if (setter) {\n      // Composite setters should only be called once, so save them\n      if (typeof setter === 'string') {\n        compositeSetters[setter] = true;\n      // only call setter if value has changed\n      // TODO - deep equal on values?\n      } else {\n        // Note - the setter will automatically update this.state\n        setter(gl, values[key], Number(key));\n      }\n    }\n  }\n\n  // HANDLE COMPOSITE SETTERS\n\n  // NOTE: any non-provided values needed by composite setters are filled in from state cache\n  // The cache parameter is automatically retrieved from the context\n  // This depends on `trackContextState`, which is technically a \"circular\" dependency.\n  // But it is too inconvenient to always require a cache parameter here.\n  // This is the ONLY external dependency in this module/\n  const cache = gl.state && gl.state.cache;\n  if (cache) {\n    const mergedValues = Object.assign({}, cache, values);\n\n    for (const key in compositeSetters) {\n      // TODO - avoid calling composite setters if values have not changed.\n      const compositeSetter = COMPOSITE_GL_PARAMETER_SETTERS[key];\n      // Note - if `trackContextState` has been called,\n      // the setter will automatically update this.state.cache\n      compositeSetter(gl, mergedValues);\n    }\n  }\n  // Add a log for the else case?\n}\n\n// Queries any single GL parameter regardless of function (gl.getParameter/gl.isEnabled...)\nexport function getParameter(gl, key) {\n  const getter = GL_PARAMETER_GETTERS[key];\n  return getter ? getter(gl, Number(key)) : gl.getParameter(Number(key));\n}\n\n// Copies the state from a context (gl.getParameter should not be overriden)\n// Reads the entire WebGL state from a context\n// Caveat: This generates a huge amount of synchronous driver roundtrips and should be\n// considered a very slow operation, to be used only if/when a context already manipulated\n// by external code needs to be synchronized for the first time\n// @return {Object} - a newly created map, with values keyed by GL parameters\nexport function getParameters(gl, parameters) {\n  // default to querying all parameters\n  parameters = parameters || GL_PARAMETER_DEFAULTS;\n  // support both arrays of parameters and objects (keys represent parameters)\n  const parameterKeys = Array.isArray(parameters) ? parameters : Object.keys(parameters);\n\n  const state = {};\n  for (const key of parameterKeys) {\n    state[key] = getParameter(gl, key);\n  }\n  return state;\n}\n\nexport function getDefaultParameters(gl) {\n  // TODO - Query GL.VIEWPORT and GL.SCISSOR_BOX since these are dynamic\n  return Object.assign({}, GL_PARAMETER_DEFAULTS, {\n    // TODO: For viewport and scissor default values are set at the time of\n    // context creation based on canvas size, we can query them here but it will\n    // not match with what we have in GL_PARAMETER_DEFAULTS table, we should revisit.\n    // [GL.VIEWPORT]: gl.constructor.prototype.getParameter.call(gl, GL.VIEWPORT),\n    // [GL.SCISSOR_BOX]: gl.constructor.prototype.getParameter.call(gl, GL.SCISSOR_BOX)\n  });\n}\n\n// Reset all parameters to a pure context state\nexport function resetParameters(gl) {\n  setParameters(gl, getDefaultParameters(gl));\n}\n\n// Get all parameters that have been modified from a pure context state\nexport function getModifiedParameters(gl) {\n  const values = getParameters(GL_PARAMETER_DEFAULTS);\n  const modified = {};\n  for (const key in GL_PARAMETER_DEFAULTS) {\n    if (!deepArrayEqual(values[key], GL_PARAMETER_DEFAULTS[key])) {\n      modified[key] = values[key];\n    }\n  }\n  return modified;\n}\n"]}